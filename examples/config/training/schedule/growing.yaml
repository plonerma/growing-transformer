training_epochs: 2

growth_phase_a:
  - match: .mlp
    split: True
    num_novel: 265
    num_keep: 256
  - match: .attention.output
    # since there is no activation function bewtween the value and output layer
    # the split direction would just cancel out
    split: False
    num_novel: 16
    num_keep: 4
  - match: .dot_product
    split: False  # splitting up key and query is equivalent to just adding new neurons
    num_novel: 16
    num_keep: 4
  - match: .attention
    split: False
    num_novel: 4
    num_keep: 1
  # encoder should be grown last, so that new layers are not grown (otherwise there are conflicts)
  - match: .encoder
    split: True
    num_novel: 0
    num_keep: 1


growth_phase_b:
  - match: .mlp
    split: True
    num_novel: 265
    num_keep: 256
  - match: .attention.output
    # since there is no activation function bewtween the value and output layer
    # the split direction would just cancel out
    split: False
    num_novel: 16
    num_keep: 4
  - match: .dot_product
    split: False  # splitting up key and query is equivalent to just adding new neurons
    num_novel: 16
    num_keep: 4
  - match: .attention
    split: False
    num_novel: 4
    num_keep: 1
  - match: .encoder
    split: True
    num_novel: 0
    num_keep: 1




steps:
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - checkpoint
  - grow: ${training.schedule.growth_phase_a}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - grow: ${training.schedule.growth_phase_a}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - checkpoint
  - grow: ${training.schedule.growth_phase_a}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - grow: ${training.schedule.growth_phase_a}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - checkpoint
  - grow: ${training.schedule.growth_phase_b}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - grow: ${training.schedule.growth_phase_b}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - checkpoint
  - grow: ${training.schedule.growth_phase_b}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - grow: ${training.schedule.growth_phase_b}
  - train:
      num_epochs: ${training.schedule.training_epochs}
  - checkpoint
  - grow: ${training.schedule.growth_phase_b}
  - train:
      num_epochs: ${training.schedule.training_epochs}
